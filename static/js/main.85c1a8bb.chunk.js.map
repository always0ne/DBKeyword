{"version":3,"sources":["components/Logo.js","components/Nav.js","components/Search.js","components/Selector.js","components/Result.js","components/Recommand.js","pages/main.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","type","id","Nav","className","to","Search","props","useState","searchStr","setSearchStr","placeholder","value","onChange","e","target","onClick","onSubmit","toUpperCase","Selector","selected","setSelected","lists","setLists","useEffect","fetch","process","then","response","json","console","log","printChange","checked","concat","filter","version","map","content","category","versions","index","Result","Recommand","Main","checklist","setChecklist","words","setWords","searchString","setSearchString","result","setResult","recommends","setRecommends","data","length","categoryData","split","push","reserved","string","selectedValue","recommands","App","basename","exact","path","render","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85c1a8bb.chunk.js","sourcesContent":["import React from 'react';\nimport './css/Logo.css'\n\nconst Logo = ({type}) => {\n    return (\n        <h1 id=\"logo\">\n            {type} Reservation Words\n        </h1>\n    );\n};\n\nexport default Logo;","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport './css/Nav.css'\n\nconst Nav = ({type}) => {\n    return (\n        <header className=\"topnav\">\n            <Link to=\"/db\">DB</Link>\n            <Link to=\"/language\">Language</Link>\n            <Link to=\"/service\">Service</Link>\n        </header>\n    );\n};\n\nexport default Nav;","import React, {useState} from 'react';\nimport './css/Search.css';\n\nconst Search = (props) => {\n    const [searchStr, setSearchStr] = useState(\"\");\n\n    const getSearchString = (e) => setSearchStr(e.target.value);\n    const searchReservations = (value) => props.onSubmit(searchStr.toUpperCase());\n\n    return (\n        <div className=\"search\">\n            <input className=\"search_box\" placeholder=\"search\" value={searchStr} type=\"text\"\n                   onChange={getSearchString}/>\n            <button className=\"search_btn\" onClick={searchReservations}>Search</button>\n        </div>\n    )\n};\n\nexport default Search;","import React, {useEffect, useState} from 'react';\nimport './css/Selector.css'\n\nconst Selector = ({type, onSubmit}) => {\n    const [selected, setSelected] = useState([]);\n    const [lists, setLists] = useState([]);\n\n    useEffect(() => fetch(process.env.PUBLIC_URL + '/data/' + type + '/versions.json')\n        .then(response => response.json())\n        .then(response => {\n            setLists(response);\n            console.log(lists);\n            console.log(\"load complete\")\n            // eslint-disable-next-line\n        }), [type]);\n\n    const printChange = (e) => {\n        if (e.target.checked)\n            setSelected(selected.concat(e.target.value));\n        else\n            setSelected(selected.filter(version => version !== e.target.value));\n    };\n    useEffect(() => {\n        onSubmit(selected)\n        // eslint-disable-next-line\n    }, [selected]);\n\n    return (\n        <ol className=\"test\">\n            {lists.map((content) =>\n                <li className=\"category\">\n                    {content.category}\n                    <ul>\n                        {content.version.map((versions, index) =>\n                            <li key={index} className=\"versions\">\n                                <label>\n                                    <input\n                                        type=\"checkbox\"\n                                        value={content.category + \" \" + versions}\n                                        onChange={printChange}\n                                    />{versions}\n                                </label>\n                            </li>)\n                        }\n                    </ul>\n                </li>\n            )}\n        </ol>\n    )\n};\n\nexport default Selector;","import React from 'react';\nimport './css/Selector.css'\n\nconst Result = (props) => {\n\n    return (\n        <div>결과</div>\n    )\n};\n\nexport default Result;","import React from 'react';\nimport './css/Search.css';\n\nconst Recommand = () => {\n\n    return (\n        <div>추천</div>\n    )\n};\n\nexport default Recommand;","import React, {useEffect, useState} from \"react\";\nimport Logo from \"../components/Logo\";\nimport Nav from \"../components/Nav\";\nimport Search from \"../components/Search\";\nimport Selector from \"../components/Selector\";\nimport Result from \"../components/Result\";\nimport Recommand from \"../components/Recommand\";\nimport './main.css'\n\nconst Main = ({type}) => {\n    const [checklist, setChecklist] = useState([]);\n    const [words, setWords] = useState([]);\n    const [searchString, setSearchString] = useState(\"\");\n    const [result, setResult] = useState([]);\n    const [recommends, setRecommends] = useState(\"\");\n\n    const getVersions = (selectedValue) => setChecklist(selectedValue);\n    const getSearchStrings = (string) => setSearchString(string);\n    const validateUsable = (list, string) => list.filter(words => words === string).length === 0;\n\n    useEffect(() => {\n        setWords(words.filter(data => data == null))\n        // eslint-disable-next-line\n    }, [checklist]);\n\n    useEffect(() => {\n        if (words.length === 0) {\n            checklist.map((category) => {\n                let categoryData = category.split(' ');\n                fetch(process.env.PUBLIC_URL + '/data/' + type + '/' + categoryData[0] + '/' + categoryData[1] + '.json')\n                    .then(response => response.json())\n                    .then(json => words.push(json.reserved));\n                return true;\n            });\n        }\n        // eslint-disable-next-line\n    }, [words]);\n\n    useEffect(() => {\n        setResult(words.map((reserved, index) => validateUsable(reserved, searchString)));\n        // eslint-disable-next-line\n    }, [searchString]);\n\n    useEffect(() => {\n        console.log(result);\n        // 검색 후 불가한 DB가 생기면 동의어 조회해서 여기에 넘겨주면 됨\n        setRecommends(\"\")\n    }, [result]);\n\n    return (\n        <div className=\"main\">\n            <Nav/>\n            <Logo type={type}/>\n            <Search onSubmit={getSearchStrings}/>\n            <Selector type={type} onSubmit={getVersions}/>\n            <Result result={result} checklist={checklist}/>\n            <Recommand recommands={recommends}/>\n            <footer/>\n        </div>\n    );\n};\n\nexport default Main;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Main from \"./pages/main\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path='/' render={() => <Main type=\"DB\"/>}/>\n                    <Route path='/db' render={() => <Main type=\"DB\"/>}/>\n                    <Route path='/language' render={() => <Main type=\"Language\"/>}/>\n                    <Route path='/service' render={() => <Main type=\"Service\"/>}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}