{"version":3,"sources":["components/Logo.js","components/Nav.js","components/Search.js","components/Category.js","components/Selector.js","components/Result.js","components/Recommend.js","components/Footer.js","pages/main.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","type","id","withRouter","props","changeService","service","flush","history","push","className","onClick","href","src","process","alt","Search","useState","searchStr","setSearchStr","searchReservations","onSubmit","toUpperCase","placeholder","value","onChange","e","target","onKeyPress","key","Category","isOpened","setIsOpened","checked","content","category","Collapse","version","map","versions","index","printChange","Selector","selected","setSelected","lists","setLists","useEffect","fetch","then","response","json","concat","filter","Result","checklist","v","result","undefined","Recommend","recommands","length","Footer","Main","setChecklist","words","setWords","searchString","setSearchString","setResult","recommends","setRecommends","search","setSearch","validateUsable","list","string","reserved","Promise","mapSeries","categoryData","split","selectedValue","App","basename","exact","path","render","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c49c28f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/Logo.css'\r\n\r\nconst Logo = ({type}) => {\r\n    return (\r\n        <h1 id=\"logo\">\r\n            {type} Reservation Words\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport './css/Nav.css'\r\nimport withRouter from \"react-router-dom/es/withRouter\";\r\n\r\nconst Nav = (props) => {\r\n    const changeService = (service) => {\r\n        props.flush()\r\n        props.history.push(\"/\" + service)\r\n    };\r\n\r\n    return (\r\n        <header className=\"topnav\">\r\n            <ll>\r\n                <li onClick={() => changeService(\"DB\")}>DB</li>\r\n                <li onClick={() => changeService(\"Language\")}>Language</li>\r\n                <li onClick={() => changeService(\"Service\")}>Service</li>\r\n            </ll>\r\n            <a href=\"https://github.com/always0ne/reserved-words\">\r\n                <img src={process.env.PUBLIC_URL + '/img/github.png'} alt=\"check\"/>\r\n            </a>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default withRouter(Nav);","import React, {useState} from 'react';\r\nimport './css/Search.css';\r\n\r\nconst Search = (props) => {\r\n    const [searchStr, setSearchStr] = useState(\"\");\r\n\r\n    const getSearchString = (e) => setSearchStr(e.target.value);\r\n    const searchReservations = () => {\r\n        if (props.type === 'DB')\r\n            props.onSubmit(searchStr.toUpperCase());\r\n        else\r\n            props.onSubmit(searchStr);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\")\r\n            searchReservations()\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"search\">\r\n            <input className=\"search_box\" placeholder=\"search\" value={searchStr} type=\"text\"\r\n                   onChange={getSearchString} onKeyPress={handleKeyPress}/>\r\n            <button className=\"search_btn\" onClick={searchReservations}>Search</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;","import React, {useState} from 'react';\r\nimport {Collapse} from \"react-collapse/lib/Collapse\";\r\nimport './css/Category.css';\r\n\r\nconst Category = (props) => {\r\n    const [isOpened, setIsOpened] = useState(false);\r\n\r\n    return (\r\n        <div className=\"category\">\r\n            <input\r\n                className=\"input\"\r\n                type=\"checkbox\"\r\n                checked={isOpened}\r\n                onChange={({target: {checked}}) => setIsOpened(checked)}/>\r\n            {props.content.category}\r\n            <li className=\"category\">\r\n                <Collapse isOpened={isOpened}>\r\n                    <ul>\r\n                        {props.content.version.map((versions, index) =>\r\n                            <li key={index} className=\"versions\">\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        value={props.content.category + \" \" + versions}\r\n                                        onChange={props.printChange}\r\n                                    />{versions}\r\n                                </label>\r\n                            </li>)\r\n                        }\r\n                    </ul>\r\n                </Collapse>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Category;","import React, {useEffect, useState} from 'react';\r\nimport './css/Selector.css'\r\nimport './css/More.css'\r\nimport Category from './Category'\r\n\r\nconst Selector = ({type, onSubmit}) => {\r\n    const [selected, setSelected] = useState([]);\r\n    const [lists, setLists] = useState([]);\r\n\r\n\r\n    useEffect(() => fetch(process.env.PUBLIC_URL + '/data/' + type + '/versions.json')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            setLists(response);\r\n            // eslint-disable-next-line\r\n        })\r\n        .then(() => setSelected([])\r\n        ), [type]);\r\n\r\n    const printChange = (e) => {\r\n        if (e.target.checked)\r\n            setSelected(selected.concat(e.target.value));\r\n        else\r\n            setSelected(selected.filter(version => version !== e.target.value));\r\n    };\r\n    useEffect(() => {\r\n        onSubmit(selected)\r\n        // eslint-disable-next-line\r\n    }, [selected]);\r\n\r\n    return (\r\n        <div>\r\n            <h2 id=\"instruction\">Select your environments!</h2>\r\n            <ol className=\"test\">\r\n                {lists.map((content, index) =>\r\n                    <Category content={content} key={index} printChange={printChange}/>\r\n                )}\r\n            </ol>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Selector;","import React from 'react';\r\nimport './css/Result.css'\r\n\r\nconst Result = (props) => {\r\n\r\n    const printTrueFalse = (result) => {\r\n        if (props.searchStr === '')\r\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/question_image.png'} alt=\"check\"/>;\r\n        if (result === undefined)\r\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/question_image.png'} alt=\"check\"/>;\r\n        else if (result === true)\r\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/check_image.png'} alt=\"check\"/>;\r\n        else if (result === false)\r\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/cross_image.png'} alt=\"cross\"/>;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Availability of \"{props.searchStr}\"</h2>\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <th>version</th>\r\n                    <th>available</th>\r\n                </tr>\r\n                {\r\n                    props.checklist.map((v, index) =>\r\n                        <tr key={index}>\r\n                            <td>{v}</td>\r\n                            <td>{printTrueFalse(props.result[index])}</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Result;","import React from 'react';\r\nimport './css/Recommend.css';\r\n\r\n\r\nconst Recommend = (props) => {\r\n\r\n    const recommendWords = () =>{\r\n        if(props.recommands.length!==0)\r\n            return \"you can't use this variable\"\r\n        else\r\n            return \"you can use this variable\"\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 id=\"recommendH\">Recommend Words(Coming soon)</h2>\r\n            {recommendWords}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Recommend;","import React from 'react';\r\nimport './css/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div id=\"copyright\">\r\n                Copyright &copy;2020 <b>reserved-words</b> All rights reserved.<br/>\r\n                We welcome contributors. Please contribute to the project!\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, {useEffect, useState} from \"react\";\r\nimport Logo from \"../components/Logo\";\r\nimport Nav from \"../components/Nav\";\r\nimport Search from \"../components/Search\";\r\nimport Selector from \"../components/Selector\";\r\nimport Result from \"../components/Result\";\r\nimport Recommend from \"../components/Recommend\";\r\nimport Footer from \"../components/Footer\"\r\nimport {Promise} from \"bluebird\";\r\nimport './main.css'\r\n\r\nconst Main = ({type}) => {\r\n    const [checklist, setChecklist] = useState([]);\r\n    const [words, setWords] = useState([]);\r\n    const [searchString, setSearchString] = useState(\"\");\r\n    const [result, setResult] = useState([]);\r\n    const [recommends, setRecommends] = useState(\"\");\r\n    const [search, setSearch] = useState(false);\r\n\r\n    const getVersions = (selectedValue) => setChecklist(selectedValue);\r\n    const validateUsable = (list, string) => list.reserved.filter(words => words === string).length === 0;\r\n    const getSearchStrings = (string) => {\r\n        setSearchString(string);\r\n        setSearch(true)\r\n    };\r\n    const flush = () => {\r\n        setSearchString(\"\");\r\n        setChecklist([]);\r\n        setResult([]);\r\n        setRecommends([]);\r\n        setWords([]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        Promise.mapSeries(checklist, (category) => {\r\n            let categoryData = category.split(' ');\r\n            if (categoryData[0] === \"c#\") {\r\n                categoryData[0] = \"cSharp\";\r\n                categoryData[1] = \"cSharp\";\r\n            }\r\n            return fetch(process.env.PUBLIC_URL + '/data/' + type + '/' + categoryData[0] + '/' + categoryData[1] + '.json')\r\n                .then(response => response.json());\r\n        }).then(json => setWords(json));\r\n        // eslint-disable-next-line\r\n    }, [checklist]);\r\n\r\n    useEffect(() => {\r\n        // Must changed\r\n        setResult(words.map((reserved) => validateUsable(reserved, searchString)));\r\n        // eslint-disable-next-line\r\n    }, [words]);\r\n\r\n    useEffect(() => {\r\n        if (search === true) {\r\n            setResult(words.map((reserved) => validateUsable(reserved, searchString)));\r\n            setSearch(false)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [search]);\r\n\r\n    useEffect(() => {\r\n        // 검색 후 불가한 DB가 생기면 동의어 조회해서 여기에 넘겨주면 됨\r\n        setRecommends(\"\")\r\n    }, [result]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"contents-wrap\">\r\n                <Nav type={type} flush={flush}/>\r\n                <Logo type={type}/>\r\n                <Search type={type} onSubmit={getSearchStrings}/>\r\n                <Selector type={type} onSubmit={getVersions}/>\r\n                <Result result={result} checklist={checklist} searchStr={searchString}/>\r\n                <Recommend recommands={recommends} searchString={searchString}/>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport './App.css';\r\nimport Main from \"./pages/main\";\r\n\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route exact path='/' render={() => <Main type=\"DB\"/>}/>\r\n                    <Route path='/DB' render={() => <Main type=\"DB\"/>}/>\r\n                    <Route path='/language' render={() => <Main type=\"Language\"/>}/>\r\n                    <Route path='/service' render={() => <Main type=\"Service\"/>}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}