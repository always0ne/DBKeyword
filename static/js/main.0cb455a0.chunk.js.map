{"version":3,"sources":["components/Logo.js","components/Nav.js","components/Search.js","components/Category.js","components/Selector.js","components/Result.js","components/Recommend.js","components/Footer.js","pages/main.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","type","id","withRouter","props","changeService","service","flush","history","push","className","onClick","Search","useState","searchStr","setSearchStr","placeholder","value","onChange","e","target","onSubmit","toUpperCase","Category","isOpened","setIsOpened","checked","content","category","Collapse","version","map","versions","index","printChange","Selector","selected","setSelected","lists","setLists","useEffect","fetch","process","then","response","json","concat","filter","Result","checklist","v","result","undefined","src","alt","Recommend","recommands","searchString","Footer","Main","setChecklist","words","setWords","setSearchString","setResult","recommends","setRecommends","search","setSearch","validateUsable","list","string","length","categoryData","split","reserved","setTimeout","selectedValue","App","basename","exact","path","render","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cb455a0.chunk.js","sourcesContent":["import React from 'react';\nimport './css/Logo.css'\n\nconst Logo = ({type}) => {\n    return (\n        <h1 id=\"logo\">\n            {type} Reservation Words\n        </h1>\n    );\n};\n\nexport default Logo;","import React from \"react\";\nimport './css/Nav.css'\nimport withRouter from \"react-router-dom/es/withRouter\";\n\nconst Nav = (props) => {\n    const changeService = (service) => {\n        props.flush()\n        props.history.push(\"/\" + service)\n    };\n\n    return (\n        <header className=\"topnav\">\n            <ll>\n                <li onClick={() => changeService(\"DB\")}>DB</li>\n                <li onClick={() => changeService(\"Language\")}>Language</li>\n                <li onClick={() => changeService(\"Service\")}>Service</li>\n            </ll>\n        </header>\n    );\n};\n\nexport default withRouter(Nav);","import React, {useState} from 'react';\nimport './css/Search.css';\n\nconst Search = (props) => {\n    const [searchStr, setSearchStr] = useState(\"\");\n\n    const getSearchString = (e) => setSearchStr(e.target.value);\n    const searchReservations = (value) => props.onSubmit(searchStr.toUpperCase());\n\n    return (\n\n        <div className=\"search\">\n            <input className=\"search_box\" placeholder=\"search\" value={searchStr} type=\"text\"\n                   onChange={getSearchString}/>\n            <button className=\"search_btn\" onClick={searchReservations}>Search</button>\n        </div>\n    )\n};\n\nexport default Search;","import React, {useState} from 'react';\r\nimport {Collapse} from \"react-collapse/lib/Collapse\";\r\nimport './css/Category.css';\r\n\r\nconst Category = (props) => {\r\n    const [isOpened, setIsOpened] = useState(false);\r\n\r\n    return (\r\n        <div className=\"category\">\r\n            <input\r\n                className=\"input\"\r\n                type=\"checkbox\"\r\n                checked={isOpened}\r\n                onChange={({target: {checked}}) => setIsOpened(checked)}/>\r\n            {props.content.category}\r\n            <li className=\"category\">\r\n                <Collapse isOpened={isOpened}>\r\n                    <ul>\r\n                        {props.content.version.map((versions, index) =>\r\n                            <li key={index} className=\"versions\">\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        value={props.content.category + \" \" + versions}\r\n                                        onChange={props.printChange}\r\n                                    />{versions}\r\n                                </label>\r\n                            </li>)\r\n                        }\r\n                    </ul>\r\n                </Collapse>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Category;","import React, {useEffect, useState} from 'react';\nimport './css/Selector.css'\nimport './css/More.css'\nimport Category from './Category'\n\nconst Selector = ({type, onSubmit}) => {\n    const [selected, setSelected] = useState([]);\n    const [lists, setLists] = useState([]);\n\n\n    useEffect(() => fetch(process.env.PUBLIC_URL + '/data/' + type + '/versions.json')\n        .then(response => response.json())\n        .then(response => {\n            setLists(response);\n            // eslint-disable-next-line\n        })\n        .then(() => setSelected([])\n        ), [type]);\n\n    const printChange = (e) => {\n        if (e.target.checked)\n            setSelected(selected.concat(e.target.value));\n        else\n            setSelected(selected.filter(version => version !== e.target.value));\n    };\n    useEffect(() => {\n        onSubmit(selected)\n        // eslint-disable-next-line\n    }, [selected]);\n\n    return (\n        <div>\n            <h2 id=\"instruction\">Select your environments!</h2>\n            <ol className=\"test\">\n                {lists.map((content, index) =>\n                    <Category content={content} key={index} printChange={printChange}/>\n                )}\n            </ol>\n        </div>\n\n    )\n};\n\nexport default Selector;","import React from 'react';\nimport './css/Result.css'\n\nconst Result = (props) => {\n\n    const printTrueFalse = (result) => {\n        if (result === undefined)\n            return \"\";\n        else if (result === true)\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/check_image.png'} alt=\"check\"/>\n        else if (result === false)\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/cross_image.png'} alt=\"cross\"/>\n    };\n\n    return (\n        <table>\n            <tbody>\n            <tr>\n                <th>version</th>\n                <th>available</th>\n            </tr>\n            {\n                props.checklist.map((v, index) =>\n                    <tr key={index}>\n                        <td>{v}</td>\n                        <td>{printTrueFalse(props.result[index])}</td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    )\n};\n\nexport default Result;","import React from 'react';\nimport './css/Recommend.css';\n\n\nconst Recommend = ({recommands, searchString}) => {\n\n    return (\n        <div>\n            <h2 id=\"recommendH\">Recommend Words(Coming soon)</h2>\n        </div>\n    )\n};\n\nexport default Recommend;","import React from 'react';\r\nimport './css/Footer.css'\r\n\r\nconst Footer=()=>{\r\n    return(\r\n        <footer>\r\n            <div id=\"copyright\">Copyright &copy;2020  <b>reserved-words</b> All rights reserved.</div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, {useEffect, useState} from \"react\";\nimport Logo from \"../components/Logo\";\nimport Nav from \"../components/Nav\";\nimport Search from \"../components/Search\";\nimport Selector from \"../components/Selector\";\nimport Result from \"../components/Result\";\nimport Recommend from \"../components/Recommend\";\nimport Footer from \"../components/Footer\"\n\nimport './main.css'\n\nconst Main = ({type}) => {\n    const [checklist, setChecklist] = useState([]);\n    const [words, setWords] = useState([]);\n    const [searchString, setSearchString] = useState(\"\");\n    const [result, setResult] = useState([]);\n    const [recommends, setRecommends] = useState(\"\");\n    const [search, setSearch] = useState(false);\n\n    const getVersions = (selectedValue) => setChecklist(selectedValue);\n    const validateUsable = (list, string) => list.filter(words => words === string).length === 0;\n    const getSearchStrings = (string) => {\n        setSearchString(string);\n        setSearch(true)\n    };\n    const flush = ()=>{\n      setSearchString(\"\");\n      setChecklist([]);\n      setResult([]);\n      setRecommends([])  ;\n        setWords([]);\n    };\n\n    useEffect(() => {\n        //setWords(words.filter(data => data == null))\n        let list = [];\n        checklist.map((category) => {\n            let categoryData = category.split(' ');\n            fetch(process.env.PUBLIC_URL + '/data/' + type + '/' + categoryData[0] + '/' + categoryData[1] + '.json')\n                .then(response => response.json())\n                .then(json => {\n                    list.push(json.reserved)\n                });\n            return true;\n        });\n        setWords(list)\n        // eslint-disable-next-line\n    }, [checklist]);\n\n    useEffect(() => {\n        // Must changed\n        // data load time(useEffect don't wait all load is completed)\n        setTimeout(() => setResult(words.map((reserved) => validateUsable(reserved, searchString))), 200)\n        // eslint-disable-next-line\n    }, [words]);\n\n    useEffect(() => {\n        if (search === true) {\n            setResult(words.map((reserved) => validateUsable(reserved, searchString)));\n            setSearch(false)\n        }\n        // eslint-disable-next-line\n    }, [search]);\n\n    useEffect(() => {\n        // 검색 후 불가한 DB가 생기면 동의어 조회해서 여기에 넘겨주면 됨\n        setRecommends(\"\")\n    }, [result]);\n\n    return (\n        <div>\n            <div className=\"contents-wrap\">\n                <Nav type={type} flush={flush}/>\n                <Logo type={type}/>\n                <Search onSubmit={getSearchStrings}/>\n                <Selector type={type} onSubmit={getVersions}/>\n                <Result result={result} checklist={checklist}/>\n                <Recommend recommands={recommends} searchString={searchString}/>\n            </div>\n            <Footer/>\n        </div>\n    );\n};\n\nexport default Main;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Main from \"./pages/main\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path='/' render={() => <Main type=\"DB\"/>}/>\n                    <Route path='/db' render={() => <Main type=\"DB\"/>}/>\n                    <Route path='/language' render={() => <Main type=\"Language\"/>}/>\n                    <Route path='/service' render={() => <Main type=\"Service\"/>}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}