{"version":3,"sources":["components/Logo.js","components/Nav.js","components/Search.js","components/Selector.js","components/Result.js","components/Recommend.js","pages/main.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","type","id","Nav","className","to","Search","props","useState","searchStr","setSearchStr","placeholder","value","onChange","e","target","onClick","onSubmit","toUpperCase","Selector","selected","setSelected","lists","setLists","useEffect","fetch","process","then","response","json","console","log","printChange","checked","concat","filter","version","map","content","category","versions","index","Result","checklist","v","result","undefined","Recommend","Main","setChecklist","words","setWords","searchString","setSearchString","setResult","recommends","setRecommends","search","setSearch","validateUsable","list","string","length","categoryData","split","push","reserved","setTimeout","selectedValue","recommands","App","basename","exact","path","render","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4aAWeA,G,MARF,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACX,OACI,qBAAIC,GAAG,OAAP,UACKD,EADL,0BCSOE,G,MAVH,SAAC,GAAW,EAAVF,KACV,OACI,yBAAQG,UAAU,SAAlB,UACI,cAAC,IAAD,CAAMC,GAAG,MAAT,gBACA,cAAC,IAAD,CAAMA,GAAG,YAAT,sBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,0BCSGC,G,MAfA,SAACC,GAAW,IAAD,EACYC,mBAAS,IADrB,mBACfC,EADe,KACJC,EADI,KAMtB,OACI,sBAAKN,UAAU,SAAf,UACI,uBAAOA,UAAU,aAAaO,YAAY,SAASC,MAAOH,EAAWR,KAAK,OACnEY,SANS,SAACC,GAAD,OAAOJ,EAAaI,EAAEC,OAAOH,UAO7C,wBAAQR,UAAU,aAAaY,QANZ,SAACJ,GAAD,OAAWL,EAAMU,SAASR,EAAUS,gBAMvD,yBCsCGC,G,MAhDE,SAAC,GAAsB,IAArBlB,EAAoB,EAApBA,KAAMgB,EAAc,EAAdA,SAAc,EACHT,mBAAS,IADN,mBAC5BY,EAD4B,KAClBC,EADkB,OAETb,mBAAS,IAFA,mBAE5Bc,EAF4B,KAErBC,EAFqB,KAInCC,qBAAU,kBAAMC,MAAMC,wBAAoCzB,EAAO,kBAC5D0B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACFL,EAASK,GACTE,QAAQC,IAAIT,GACZQ,QAAQC,IAAI,sBAEZ,CAAC9B,IAET,IAAM+B,EAAc,SAAClB,GACbA,EAAEC,OAAOkB,QACTZ,EAAYD,EAASc,OAAOpB,EAAEC,OAAOH,QAErCS,EAAYD,EAASe,QAAO,SAAAC,GAAO,OAAIA,IAAYtB,EAAEC,OAAOH,WAOpE,OALAY,qBAAU,WACNP,EAASG,KAEV,CAACA,IAGA,oBAAIhB,UAAU,OAAd,SACKkB,EAAMe,KAAI,SAACC,GAAD,OACP,qBAAIlC,UAAU,WAAd,UACKkC,EAAQC,SACT,6BACKD,EAAQF,QAAQC,KAAI,SAACG,EAAUC,GAAX,OACjB,oBAAgBrC,UAAU,WAA1B,SACI,kCACI,uBACIH,KAAK,WACLW,MAAO0B,EAAQC,SAAW,IAAMC,EAChC3B,SAAUmB,IACXQ,MANFC,kBCHtBC,G,MA5BA,SAACnC,GAWZ,OACI,kCACI,+BACI,yCACA,8CAGAA,EAAMoC,UAAUN,KAAI,SAACO,EAAGH,GAAJ,OAChB,+BACI,6BAAKG,IACL,8BAnBIC,EAmBgBtC,EAAMsC,OAAOJ,QAlBlCK,IAAXD,EACO,IACS,IAAXA,EACE,QACS,IAAXA,EACE,aADN,QALc,IAACA,UCObE,G,MATG,WAEd,OACI,8BACI,oBAAI7C,GAAG,aAAP,8CCkEG8C,G,MAhEF,SAAC,GAAY,IAAX/C,EAAU,EAAVA,KAAU,EACaO,mBAAS,IADtB,mBACdmC,EADc,KACHM,EADG,OAEKzC,mBAAS,IAFd,mBAEd0C,EAFc,KAEPC,EAFO,OAGmB3C,mBAAS,IAH5B,mBAGd4C,EAHc,KAGAC,EAHA,OAIO7C,mBAAS,IAJhB,mBAIdqC,EAJc,KAINS,EAJM,OAKe9C,mBAAS,IALxB,mBAKd+C,EALc,KAKFC,EALE,OAMOhD,oBAAS,GANhB,mBAMdiD,EANc,KAMNC,EANM,KASfC,EAAiB,SAACC,EAAMC,GAAP,OAAoE,IAAlDD,EAAKzB,QAAO,SAAAe,GAAK,OAAIA,IAAUW,KAAQC,QA0ChF,OApCAtC,qBAAU,WAEN,IAAIoC,EAAO,GACXjB,EAAUN,KAAI,SAACE,GACX,IAAIwB,EAAexB,EAASyB,MAAM,KAMlC,OALAvC,MAAMC,wBAAoCzB,EAAO,IAAM8D,EAAa,GAAK,IAAMA,EAAa,GAAK,SAC5FpC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACF+B,EAAKK,KAAKpC,EAAKqC,cAEhB,KAEXf,EAASS,KAEV,CAACjB,IAEJnB,qBAAU,WAGN2C,YAAW,kBAAIb,EAAUJ,EAAMb,KAAI,SAAC6B,GAAD,OAAcP,EAAeO,EAAUd,SAAgB,OAE3F,CAACF,IAEJ1B,qBAAU,YACS,IAAXiC,IACAH,EAAUJ,EAAMb,KAAI,SAAC6B,GAAD,OAAcP,EAAeO,EAAUd,OAC3DM,GAAU,MAGf,CAACD,IAEJjC,qBAAU,WAENgC,EAAc,MACf,CAACX,IAGA,sBAAKzC,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAMH,KAAMA,IACZ,cAAC,EAAD,CAAQgB,SA7CS,SAAC4C,GACtBR,EAAgBQ,GAChBH,GAAU,MA4CN,cAAC,EAAD,CAAUzD,KAAMA,EAAMgB,SAhDV,SAACmD,GAAD,OAAmBnB,EAAamB,MAiD5C,cAAC,EAAD,CAAQvB,OAAQA,EAAQF,UAAWA,IACnC,cAAC,EAAD,CAAW0B,WAAYd,IACvB,gCC/CGe,E,uKAbP,OACI,cAAC,IAAD,CAAQC,SAAU7C,kBAAlB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,CAAMzE,KAAK,UAC/C,cAAC,IAAD,CAAOwE,KAAK,MAAMC,OAAQ,kBAAM,cAAC,EAAD,CAAMzE,KAAK,UAC3C,cAAC,IAAD,CAAOwE,KAAK,YAAYC,OAAQ,kBAAM,cAAC,EAAD,CAAMzE,KAAK,gBACjD,cAAC,IAAD,CAAOwE,KAAK,WAAWC,OAAQ,kBAAM,cAAC,EAAD,CAAMzE,KAAK,wB,GARlD0E,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.d107ff00.chunk.js","sourcesContent":["import React from 'react';\nimport './css/Logo.css'\n\nconst Logo = ({type}) => {\n    return (\n        <h1 id=\"logo\">\n            {type} Reservation Words\n        </h1>\n    );\n};\n\nexport default Logo;","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport './css/Nav.css'\n\nconst Nav = ({type}) => {\n    return (\n        <header className=\"topnav\">\n            <Link to=\"/db\">DB</Link>\n            <Link to=\"/language\">Language</Link>\n            <Link to=\"/service\">Service</Link>\n        </header>\n    );\n};\n\nexport default Nav;","import React, {useState} from 'react';\nimport './css/Search.css';\n\nconst Search = (props) => {\n    const [searchStr, setSearchStr] = useState(\"\");\n\n    const getSearchString = (e) => setSearchStr(e.target.value);\n    const searchReservations = (value) => props.onSubmit(searchStr.toUpperCase());\n\n    return (\n        <div className=\"search\">\n            <input className=\"search_box\" placeholder=\"search\" value={searchStr} type=\"text\"\n                   onChange={getSearchString}/>\n            <button className=\"search_btn\" onClick={searchReservations}>Search</button>\n        </div>\n    )\n};\n\nexport default Search;","import React, {useEffect, useState} from 'react';\nimport './css/Selector.css'\n\nconst Selector = ({type, onSubmit}) => {\n    const [selected, setSelected] = useState([]);\n    const [lists, setLists] = useState([]);\n\n    useEffect(() => fetch(process.env.PUBLIC_URL + '/data/' + type + '/versions.json')\n        .then(response => response.json())\n        .then(response => {\n            setLists(response);\n            console.log(lists);\n            console.log(\"load complete\")\n            // eslint-disable-next-line\n        }), [type]);\n\n    const printChange = (e) => {\n        if (e.target.checked)\n            setSelected(selected.concat(e.target.value));\n        else\n            setSelected(selected.filter(version => version !== e.target.value));\n    };\n    useEffect(() => {\n        onSubmit(selected)\n        // eslint-disable-next-line\n    }, [selected]);\n\n    return (\n        <ol className=\"test\">\n            {lists.map((content) =>\n                <li className=\"category\">\n                    {content.category}\n                    <ul>\n                        {content.version.map((versions, index) =>\n                            <li key={index} className=\"versions\">\n                                <label>\n                                    <input\n                                        type=\"checkbox\"\n                                        value={content.category + \" \" + versions}\n                                        onChange={printChange}\n                                    />{versions}\n                                </label>\n                            </li>)\n                        }\n                    </ul>\n                </li>\n            )}\n        </ol>\n    )\n};\n\nexport default Selector;","import React from 'react';\nimport './css/Result.css'\n\nconst Result = (props) => {\n\n    const printTrueFalse = (result) => {\n        if (result === undefined)\n            return \"\";\n        else if (result === true)\n            return \"True\";\n        else if (result === false)\n            return \"False\"\n    };\n\n    return (\n        <table>\n            <tr>\n                <th>version</th>\n                <th>available</th>\n            </tr>\n            {\n                props.checklist.map((v, index) =>\n                    <tr>\n                        <td>{v}</td>\n                        <td>{printTrueFalse(props.result[index])}</td>\n                    </tr>\n                )}\n        </table>\n    )\n};\n\nexport default Result;","import React from 'react';\nimport './css/Recommend.css';\n\nconst Recommend = () => {\n\n    return (\n        <div>\n            <h2 id=\"recommendH\">Recommend Words(Coming soon)</h2>\n        </div>\n    )\n};\n\nexport default Recommend;","import React, {useEffect, useState} from \"react\";\nimport Logo from \"../components/Logo\";\nimport Nav from \"../components/Nav\";\nimport Search from \"../components/Search\";\nimport Selector from \"../components/Selector\";\nimport Result from \"../components/Result\";\nimport Recommend from \"../components/Recommend\";\nimport './main.css'\n\nconst Main = ({type}) => {\n    const [checklist, setChecklist] = useState([]);\n    const [words, setWords] = useState([]);\n    const [searchString, setSearchString] = useState(\"\");\n    const [result, setResult] = useState([]);\n    const [recommends, setRecommends] = useState(\"\");\n    const [search, setSearch] = useState(false);\n\n    const getVersions = (selectedValue) => setChecklist(selectedValue);\n    const validateUsable = (list, string) => list.filter(words => words === string).length === 0;\n    const getSearchStrings = (string) => {\n        setSearchString(string);\n        setSearch(true)\n    };\n\n    useEffect(() => {\n        //setWords(words.filter(data => data == null))\n        let list = [];\n        checklist.map((category) => {\n            let categoryData = category.split(' ');\n            fetch(process.env.PUBLIC_URL + '/data/' + type + '/' + categoryData[0] + '/' + categoryData[1] + '.json')\n                .then(response => response.json())\n                .then(json => {\n                    list.push(json.reserved)\n                });\n            return true;\n        });\n        setWords(list)\n        // eslint-disable-next-line\n    }, [checklist]);\n\n    useEffect(() => {\n        // Must changed\n        // data load time(useEffect don't wait all load is completed)\n        setTimeout(()=>setResult(words.map((reserved) => validateUsable(reserved, searchString))),200)\n        // eslint-disable-next-line\n    }, [words]);\n\n    useEffect(() => {\n        if (search === true) {\n            setResult(words.map((reserved) => validateUsable(reserved, searchString)));\n            setSearch(false)\n        }\n        // eslint-disable-next-line\n    }, [search]);\n\n    useEffect(() => {\n        // 검색 후 불가한 DB가 생기면 동의어 조회해서 여기에 넘겨주면 됨\n        setRecommends(\"\")\n    }, [result]);\n\n    return (\n        <div className=\"main\">\n            <Nav/>\n            <Logo type={type}/>\n            <Search onSubmit={getSearchStrings}/>\n            <Selector type={type} onSubmit={getVersions}/>\n            <Result result={result} checklist={checklist}/>\n            <Recommend recommands={recommends}/>\n            <footer/>\n        </div>\n    );\n};\n\nexport default Main;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Main from \"./pages/main\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path='/' render={() => <Main type=\"DB\"/>}/>\n                    <Route path='/db' render={() => <Main type=\"DB\"/>}/>\n                    <Route path='/language' render={() => <Main type=\"Language\"/>}/>\n                    <Route path='/service' render={() => <Main type=\"Service\"/>}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}