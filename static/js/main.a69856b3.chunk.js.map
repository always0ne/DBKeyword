{"version":3,"sources":["components/Logo.js","components/Nav.js","components/Search.js","components/Category.js","components/Selector.js","components/Result.js","components/Recommend.js","components/Footer.js","pages/main.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","type","id","withRouter","props","changeService","service","flush","history","push","className","onClick","href","src","process","alt","Search","useState","searchStr","setSearchStr","searchReservations","onSubmit","toUpperCase","placeholder","value","onChange","e","target","onKeyPress","key","Category","isOpened","setIsOpened","checked","content","category","Collapse","version","map","versions","index","printChange","Selector","selected","setSelected","lists","setLists","useEffect","fetch","then","response","json","concat","filter","Result","checklist","v","result","undefined","Recommend","recommands","searchString","Footer","Main","setChecklist","words","setWords","setSearchString","setResult","recommends","setRecommends","search","setSearch","validateUsable","list","string","reserved","length","Promise","mapSeries","categoryData","split","selectedValue","App","basename","exact","path","render","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a69856b3.chunk.js","sourcesContent":["import React from 'react';\nimport './css/Logo.css'\n\nconst Logo = ({type}) => {\n    return (\n        <h1 id=\"logo\">\n            {type} Reservation Words\n        </h1>\n    );\n};\n\nexport default Logo;","import React from \"react\";\nimport './css/Nav.css'\nimport withRouter from \"react-router-dom/es/withRouter\";\n\nconst Nav = (props) => {\n    const changeService = (service) => {\n        props.flush()\n        props.history.push(\"/\" + service)\n    };\n\n    return (\n        <header className=\"topnav\">\n            <ll>\n                <li onClick={() => changeService(\"DB\")}>DB</li>\n                <li onClick={() => changeService(\"Language\")}>Language</li>\n                <li onClick={() => changeService(\"Service\")}>Service</li>\n            </ll>\n            <a href=\"https://github.com/always0ne/reserved-words\">\n                <img src={process.env.PUBLIC_URL + '/img/github.png'} alt=\"check\"/>\n            </a>\n        </header>\n    );\n};\n\nexport default withRouter(Nav);","import React, {useState} from 'react';\nimport './css/Search.css';\n\nconst Search = (props) => {\n    const [searchStr, setSearchStr] = useState(\"\");\n\n    const getSearchString = (e) => setSearchStr(e.target.value);\n    const searchReservations = () => {\n        if (props.type === 'DB')\n            props.onSubmit(searchStr.toUpperCase());\n        else\n            props.onSubmit(searchStr);\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === \"Enter\")\n            searchReservations()\n    };\n\n    return (\n\n        <div className=\"search\">\n            <input className=\"search_box\" placeholder=\"search\" value={searchStr} type=\"text\"\n                   onChange={getSearchString} onKeyPress={handleKeyPress}/>\n            <button className=\"search_btn\" onClick={searchReservations}>Search</button>\n        </div>\n    )\n};\n\nexport default Search;","import React, {useState} from 'react';\r\nimport {Collapse} from \"react-collapse/lib/Collapse\";\r\nimport './css/Category.css';\r\n\r\nconst Category = (props) => {\r\n    const [isOpened, setIsOpened] = useState(false);\r\n\r\n    return (\r\n        <div className=\"category\">\r\n            <input\r\n                className=\"input\"\r\n                type=\"checkbox\"\r\n                checked={isOpened}\r\n                onChange={({target: {checked}}) => setIsOpened(checked)}/>\r\n            {props.content.category}\r\n            <li className=\"category\">\r\n                <Collapse isOpened={isOpened}>\r\n                    <ul>\r\n                        {props.content.version.map((versions, index) =>\r\n                            <li key={index} className=\"versions\">\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        value={props.content.category + \" \" + versions}\r\n                                        onChange={props.printChange}\r\n                                    />{versions}\r\n                                </label>\r\n                            </li>)\r\n                        }\r\n                    </ul>\r\n                </Collapse>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Category;","import React, {useEffect, useState} from 'react';\nimport './css/Selector.css'\nimport './css/More.css'\nimport Category from './Category'\n\nconst Selector = ({type, onSubmit}) => {\n    const [selected, setSelected] = useState([]);\n    const [lists, setLists] = useState([]);\n\n\n    useEffect(() => fetch(process.env.PUBLIC_URL + '/data/' + type + '/versions.json')\n        .then(response => response.json())\n        .then(response => {\n            setLists(response);\n            // eslint-disable-next-line\n        })\n        .then(() => setSelected([])\n        ), [type]);\n\n    const printChange = (e) => {\n        if (e.target.checked)\n            setSelected(selected.concat(e.target.value));\n        else\n            setSelected(selected.filter(version => version !== e.target.value));\n    };\n    useEffect(() => {\n        onSubmit(selected)\n        // eslint-disable-next-line\n    }, [selected]);\n\n    return (\n        <div>\n            <h2 id=\"instruction\">Select your environments!</h2>\n            <ol className=\"test\">\n                {lists.map((content, index) =>\n                    <Category content={content} key={index} printChange={printChange}/>\n                )}\n            </ol>\n        </div>\n\n    )\n};\n\nexport default Selector;","import React from 'react';\nimport './css/Result.css'\n\nconst Result = (props) => {\n\n    const printTrueFalse = (result) => {\n        if (props.searchStr === '')\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/question_image.png'} alt=\"check\"/>;\n        if (result === undefined)\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/question_image.png'} alt=\"check\"/>;\n        else if (result === true)\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/check_image.png'} alt=\"check\"/>;\n        else if (result === false)\n            return <img className=\"resultImg\" src={process.env.PUBLIC_URL + '/img/cross_image.png'} alt=\"cross\"/>;\n    };\n\n    return (\n        <div>\n            <h2>Availability of \"{props.searchStr}\"</h2>\n            <table>\n                <tbody>\n                <tr>\n                    <th>version</th>\n                    <th>available</th>\n                </tr>\n                {\n                    props.checklist.map((v, index) =>\n                        <tr key={index}>\n                            <td>{v}</td>\n                            <td>{printTrueFalse(props.result[index])}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n};\n\nexport default Result;","import React from 'react';\nimport './css/Recommend.css';\n\n\nconst Recommend = ({recommands, searchString}) => {\n\n    return (\n        <div>\n            <h2 id=\"recommendH\">Recommend Words(Coming soon)</h2>\n        </div>\n    )\n};\n\nexport default Recommend;","import React from 'react';\r\nimport './css/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div id=\"copyright\">\r\n                Copyright &copy;2020 <b>reserved-words</b> All rights reserved.<br/>\r\n                We welcome contributors. Please contribute to the project!\r\n            </div>\r\n\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, {useEffect, useState} from \"react\";\nimport Logo from \"../components/Logo\";\nimport Nav from \"../components/Nav\";\nimport Search from \"../components/Search\";\nimport Selector from \"../components/Selector\";\nimport Result from \"../components/Result\";\nimport Recommend from \"../components/Recommend\";\nimport Footer from \"../components/Footer\"\nimport {Promise} from \"bluebird\";\nimport './main.css'\n\nconst Main = ({type}) => {\n    const [checklist, setChecklist] = useState([]);\n    const [words, setWords] = useState([]);\n    const [searchString, setSearchString] = useState(\"\");\n    const [result, setResult] = useState([]);\n    const [recommends, setRecommends] = useState(\"\");\n    const [search, setSearch] = useState(false);\n\n    const getVersions = (selectedValue) => setChecklist(selectedValue);\n    const validateUsable = (list, string) => list.reserved.filter(words => words === string).length === 0;\n    const getSearchStrings = (string) => {\n        setSearchString(string);\n        setSearch(true)\n    };\n    const flush = () => {\n        setSearchString(\"\");\n        setChecklist([]);\n        setResult([]);\n        setRecommends([]);\n        setWords([]);\n    };\n\n    useEffect(() => {\n        Promise.mapSeries(checklist, (category) => {\n            let categoryData = category.split(' ');\n            if (categoryData[0] === \"c#\") {\n                categoryData[0] = \"cSharp\";\n                categoryData[1] = \"cSharp\";\n            }\n            return fetch(process.env.PUBLIC_URL + '/data/' + type + '/' + categoryData[0] + '/' + categoryData[1] + '.json')\n                .then(response => response.json());\n        }).then(json => setWords(json));\n        // eslint-disable-next-line\n    }, [checklist]);\n\n    useEffect(() => {\n        // Must changed\n        setResult(words.map((reserved) => validateUsable(reserved, searchString)));\n        // eslint-disable-next-line\n    }, [words]);\n\n    useEffect(() => {\n        if (search === true) {\n            setResult(words.map((reserved) => validateUsable(reserved, searchString)));\n            setSearch(false)\n        }\n        // eslint-disable-next-line\n    }, [search]);\n\n    useEffect(() => {\n        // 검색 후 불가한 DB가 생기면 동의어 조회해서 여기에 넘겨주면 됨\n        setRecommends(\"\")\n    }, [result]);\n\n    return (\n        <div>\n            <div className=\"contents-wrap\">\n                <Nav type={type} flush={flush}/>\n                <Logo type={type}/>\n                <Search type={type} onSubmit={getSearchStrings}/>\n                <Selector type={type} onSubmit={getVersions}/>\n                <Result result={result} checklist={checklist} searchStr={searchString}/>\n                <Recommend recommands={recommends} searchString={searchString}/>\n            </div>\n            <Footer/>\n        </div>\n    );\n};\n\nexport default Main;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Main from \"./pages/main\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path='/' render={() => <Main type=\"DB\"/>}/>\n                    <Route path='/DB' render={() => <Main type=\"DB\"/>}/>\n                    <Route path='/language' render={() => <Main type=\"Language\"/>}/>\n                    <Route path='/service' render={() => <Main type=\"Service\"/>}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}